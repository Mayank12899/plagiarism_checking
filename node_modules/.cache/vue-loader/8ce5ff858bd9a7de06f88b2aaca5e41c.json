{"remainingRequest":"/home/sanfer/Documents/project/project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sanfer/Documents/project/project/src/views/Mytopic.vue?vue&type=template&id=fd86ef8e&scoped=true&","dependencies":[{"path":"/home/sanfer/Documents/project/project/src/views/Mytopic.vue","mtime":1586362036351},{"path":"/home/sanfer/Documents/project/project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sanfer/Documents/project/project/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/sanfer/Documents/project/project/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/sanfer/Documents/project/project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sanfer/Documents/project/project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}